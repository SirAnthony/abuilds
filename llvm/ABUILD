# ABUILD generated by mkpkg_generator.sh

pkgname=llvm
pkgver=3.4.1
basever=${pkgver%.*}
pkgbuild=1
arch=("auto")
_gcc_ver=4.7.3
shortdesc="Low Level Virtual Machine"

tags=("develop sys-devel")

source=("http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.gz"
	"http://llvm.org/releases/$pkgver/cfe-$pkgver.src.tar.gz"
	"http://llvm.org/releases/$basever/clang-tools-extra-$basever.src.tar.gz"
	"http://llvm.org/releases/$basever/compiler-rt-$basever.src.tar.gz")

build_deps="libffi python ocaml python-sphinx"
pkglist="llvm_libs clang clang_libs llvm_ocaml clang_analyzer"
adddep="perl"

fix_make() {
	local sub_files=(
	    Makefile.config.in
	    Makefile.rules
	    tools/llvm-config/llvm-config.cpp
	    tools/llvm-config/Makefile
	    tools/clang/lib/Driver/Tools.cpp
	    tools/clang/tools/scan-build/scan-build
	)

	# unfortunately ./configure won't listen to --mandir and the-like, so take
	# care of this.
	sed -e "s,@libdir@,lib${LIBDIRSUFFIX}/${pkgname},g" \
		-e "s,@PF@,${pkgname}-${pkgver},g" \
		-i "${sub_files[@]}" \
		|| die "install paths sed failed"

	sed -i \
	    -e "/ActiveLibDir/s|/lib/|/lib${LIBDIRSUFFIX}/${pkgname}/|g" \
	    -e "/ActiveLibDir/s|/lib\"|/lib${LIBDIRSUFFIX}/${pkgname}\"|g" \
	    tools/llvm-config/llvm-config.cpp || exit 1

	sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

	sed -i "s|/lib /usr/lib \$lt_ld_extra|/lib${LIBDIRSUFFIX} /usr/lib${LIBDIRSUFFIX} \$lt_ld_extra|" \
	  ./configure
}

build() {
	cd "$srcdir/$pkgname-$pkgver.src"

	# At the present, clang must reside inside the LLVM source code tree to build
	# See http://llvm.org/bugs/show_bug.cgi?id=4840
	mv "$srcdir/cfe-$pkgver.src" tools/clang
	mv "$srcdir/clang-tools-extra-$basever" tools/clang/tools/extra
	mv "$srcdir/compiler-rt-$basever" projects/compiler-rt

	burn_patches
	fix_make

	# Include location of libffi headers in CPPFLAGS
	export CPPFLAGS="$SLKCXXFLAGS $SLKCPPFLAGS $(pkg-config --cflags libffi)"

	_cxx_headers="/usr/include/c++/$_gcc_ver"
	if [[ ! -d $_cxx_headers ]]; then
		echo "Couldn't find the C++ headers, PKGBUILD needs fixing!"
		return 1
	fi

	if [ "$ARCH" = "x86_64" ] ; then
		CHOST=x86_64
	else
		CHOST=i686
	fi

	# Fix clang headers path
	sed -e "/PROJ_headers/s#lib/clang#lib${LIBDIRSUFFIX}/clang#" \
		-i $srcdir/llvm-$pkgver.src/tools/clang/lib/Headers/Makefile

	./configure \
		--prefix=/usr \
		--libdir=/usr/lib${LIBDIRSUFFIX}/${pkgname} \
		--datadir=/usr/lib${LIBDIRSUFFIX}/${pkgname} \
		--sysconfdir=/etc \
		--mandir=/usr/man \
		--enable-shared \
		--enable-libffi \
		--enable-targets=all \
		--enable-experimental-targets=R600 \
		--disable-expensive-checks \
		--disable-debug-runtime \
		--disable-assertions \
		--with-cxx-include-root=$_cxx_headers \
		--with-cxx-include-arch=$CHOST \
		--enable-optimized
		# --with-binutils-include=/usr/include \ # gold plugin

	make REQUIRES_RTTI=1 -j${numjobs}

	make -j${numjobs} -C docs -f Makefile.sphinx man
	make -j${numjobs} -C docs -f Makefile.sphinx html
	make -j${numjobs} -C tools/clang/docs -f Makefile.sphinx html
}


after_build() {
	# We move the clang directory out of the tree so it won't get installed and
	# then we bring it back in for the clang package
	mv tools/clang "$srcdir"

	# -j1 is due to race conditions during the installation of the OCaml bindings
	make -j1 DESTDIR="$pkgdir" install
	mv "$srcdir/clang" tools

	# Remove static libs
	find "$pkgdir/usr/lib${LIBDIRSUFFIX}/${pkgname}/" -name "*.a" -exec rm -f {} \;

	# OCaml bindings go to a separate package
	rm -rf "$srcdir"/{ocaml,ocamldoc}
	mv "$pkgdir"/usr/{lib${LIBDIRSUFFIX}/ocaml,doc/llvm-${pkgver}/ocamldoc} "$srcdir"

	# Get rid of example Hello transformation
	rm "$pkgdir"/usr/lib${LIBDIRSUFFIX}/llvm/*LLVMHello.*

	# Install ld.conf
	mkdir -p ${pkgdir}/etc/ld.so.conf.d
	sed -e "s,@LIBDIRSUFFIX@,${LIBDIRSUFFIX},g" ${filedir}/llvm.conf > \
	    ${pkgdir}/etc/ld.so.conf.d/llvm-${ARCH}.conf

	if [[ $ARCH == x86_64 ]]; then
	    # Needed for multilib (https://bugs.archlinux.org/task/29951)
	    # Header stubs are taken from Fedora
	    for _header in config llvm-config; do
		mv "$pkgdir/usr/include/llvm/Config/$_header"{,-64}.h
		cp "$filedir/llvm-Config-$_header.h" \
		"$pkgdir/usr/include/llvm/Config/$_header.h"
	    done
	fi

	# Install man pages
	install -d "$pkgdir/usr/man/man1"
	cp docs/_build/man/*.1 "$pkgdir/usr/man/man1/"

	# Install html docs
	cp -r docs/_build/html/* "$pkgdir/usr/doc/$pkgname-${pkgver}/html/"
	rm -r "$pkgdir/usr/doc/$pkgname-${pkgver}/html/_sources"

	install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

llvm_libs() {
	pkgname=llvm-libs
	shortdesc="Static libs of LLVM"
	adddep="llvm=${pkgver}"
}

llvm_libs_prep() {
	go_src_dir
	mv tools/clang "$srcdir"

	# -j1 is due to race conditions during the installation of the OCaml bindings
	make -j1 DESTDIR="$pkgdir" install
	mv "$srcdir/clang" tools

	# Remove non-static stuff
	rm -rf $pkgdir/usr/{bin,doc,include,man,share,lib${LIBDIRSUFFIX}/{clang,ocaml}}
	find "$pkgdir/usr/lib${LIBDIRSUFFIX}/${p_pkgname}/" -name "*.so" -exec rm -f {} \;

	# Remove execute bit from static libraries
	chmod -x "$pkgdir"/usr/lib${LIBDIRSUFFIX}/${p_pkgname}/*.a
	install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/llvm-libs/LICENSE"
}

llvm_ocaml() {
	pkgname=llvm-ocaml
	shortdesc="OCaml bindings for LLVM"
	adddep="ocaml llvm=${pkgver} llvm-libs=${pkgver}"
}

llvm_ocaml_prep() {
	cd "$srcdir/llvm-$pkgver.src"

	install -d "$pkgdir"/{usr/lib${LIBDIRSUFFIX},usr/doc/llvm-${pkgver}}
	cp -r "$srcdir/ocaml" "$pkgdir/usr/lib${LIBDIRSUFFIX}"
	cp -r "$srcdir/ocamldoc" "$pkgdir/usr/doc/llvm-${pkgver}"
	
	( cd "$pkgdir"/usr/lib${LIBDIRSUFFIX}/ocaml/
	  for file in libllvm*.a; do
	    rm -f ${file}
	    ln -s /usr/lib/llvm/${file} ${file}
	  done
	)

	# Remove execute bit from static libraries
	#chmod -x "$pkgdir"/usr/lib${LIBDIRSUFFIX}/ocaml/libllvm*.a

	install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/llvm-ocaml/LICENSE"
}

clang() {
	pkgname=clang
	shortdesc="C language family frontend for LLVM"
	adddep="llvm=${pkgver} gcc=${_gcc_ver}"
}

clang_prep() {
	cd "$srcdir/llvm-$pkgver.src/tools/clang"
	make DESTDIR="$pkgdir" install

	if [ ! -z "$LIBDIRSUFFIX" ] ; then
	    cp -r $pkgdir/usr/{lib/*,lib$LIBDIRSUFFIX/}
	    rm -r $pkgdir/usr/lib/
	fi

	# Remove static llvm libs
	find "$pkgdir/usr/lib${LIBDIRSUFFIX}/" -name "*.a" -exec rm -f {} \;
	find $pkgdir/usr/lib${LIBDIRSUFFIX}/ -type d -empty -delete

	# Just move it. Why using sed?
	mv $pkgdir/usr/doc/llvm-${pkgver} $pkgdir/usr/doc/clang-${pkgver}

	# Install html docs
	cp -r docs/_build/html/* "$pkgdir/usr/doc/$pkgname-${pkgver}/html/"
	rm -r "$pkgdir/usr/doc/$pkgname-${pkgver}/html/_sources"
	install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/clang/LICENSE"
}

clang_libs() {
	pkgname=clang-libs
	shortdesc="Static libs for clang"
	adddep="clang=${pkgver}"
}

clang_libs_prep() {
	cd "$srcdir/llvm-$pkgver.src/tools/clang"
	make DESTDIR="$pkgdir" install

	if [ ! -z "$LIBDIRSUFFIX" ] ; then
	    cp -r $pkgdir/usr/{lib/*,lib$LIBDIRSUFFIX/}
	    rm -r $pkgdir/usr/lib/
	fi

	# Remove other stuff
	rm -r $pkgdir/usr/{bin,doc,include,man,lib${LIBDIRSUFFIX}/clang/$pkgver/include}
	find "$pkgdir/usr/lib${LIBDIRSUFFIX}/" -name "*.so" -exec rm -f {} \;
	find $pkgdir/usr/lib${LIBDIRSUFFIX}/ -type d -empty -delete

	# Fix permissions of static libs
	chmod -x "$pkgdir"/usr/lib${LIBDIRSUFFIX}/llvm/*.a
	install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/clang-libs/LICENSE"
}

clang_analyzer() {
	pkgname=clang-analyzer
	shortdesc="A source code analysis framework"
	adddep="clang=${pkgver}"
}

clang_analyzer_prep() {
	cd "$srcdir/llvm-$pkgver.src/tools/clang"

	install -d "$pkgdir"/usr/{bin,lib${LIBDIRSUFFIX}/clang-analyzer}
	for _tool in scan-{build,view}; do
		cp -r tools/$_tool "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer/"
		ln -s /usr/lib${LIBDIRSUFFIX}/clang-analyzer/$_tool/$_tool "$pkgdir/usr/bin/"
	done

	# scan-build looks for clang within the same directory
	ln -s /usr/bin/clang "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/"

	# Relocate man page
	install -d "$pkgdir/usr/man/man1"
	mv "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/scan-build.1" \
	    "$pkgdir/usr/man/man1/"

	# Compile Python scripts
	python -m compileall "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer"
	python -O -m compileall "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer"

	install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/clang-analyzer/LICENSE"
}
